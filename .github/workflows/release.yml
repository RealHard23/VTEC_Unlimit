name: Auto Build Magisk Module from Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Release Info
        id: get_release
        run: |
          echo "TAG_NAME=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          ASSET_URL=$(curl -s "${{ github.event.release.assets_url }}" | jq -r '.[0].browser_download_url')
          echo "ASSET_URL=$ASSET_URL" >> $GITHUB_ENV

      - name: Download and Extract Zip
        run: |
          echo "Downloading from: $ASSET_URL"
          curl -L -o release.zip "$ASSET_URL"
          unzip -o release.zip

          # Extract versionCode from module.prop (fallback = 100)
          if [ -f "module.prop" ]; then
            VERSION_CODE=$(grep "^versionCode=" module.prop | cut -d'=' -f2)
            [ -z "$VERSION_CODE" ] && VERSION_CODE="100"
          else
            echo "❌ module.prop not found"
            exit 1
          fi

          echo "MODULE_VERSION=${TAG_NAME}" >> $GITHUB_ENV
          echo "MODULE_VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

      - name: Update module.prop
        run: |
          sed -i "s/^version=.*/version=${MODULE_VERSION}/" module.prop || echo "version=${MODULE_VERSION}" >> module.prop
          sed -i "s/^versionCode=.*/versionCode=${MODULE_VERSION_CODE}/" module.prop || echo "versionCode=${MODULE_VERSION_CODE}" >> module.prop
          echo "=== Updated module.prop ==="
          cat module.prop

      - name: Set File Permissions
        run: |
          chmod +x install.sh uninstall.sh || true
          [ -d META-INF ] && find META-INF -type f -name "*.sh" -exec chmod +x {} \;
          [ -d script ] && find script -type f -name "*.sh" -exec chmod +x {} \;
          [ -d system ] && find system -type f -exec chmod 644 {} \;

      - name: Create Magisk Zip
        run: |
          OUTPUT_NAME="MagiskModule_${MODULE_VERSION}.zip"
          zip -r "$OUTPUT_NAME" . \
            -x ".git/*" ".github/*" "*.md" "*.log" "*.txt" "*.bak" "*.zip"
          echo "✅ Created: $OUTPUT_NAME"
          echo "ZIP_NAME=$OUTPUT_NAME" >> $GITHUB_ENV

      - name: Upload Zip Back to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update update.json
        run: |
          cat <<EOF > update.json
          {
            "version": "${MODULE_VERSION}",
            "versionCode": "${MODULE_VERSION_CODE}",
            "zipUrl": "https://github.com/${{ github.repository }}/releases/download/${MODULE_VERSION}/${ZIP_NAME}",
            "changelog": "https://raw.githubusercontent.com/${{ github.repository }}/main/changelog.md"
          }
          EOF

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add update.json
          git commit -m "Update update.json for ${MODULE_VERSION}" || echo "No changes to commit"
          git push
