Name: Build & Release Magisk Module

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set version info
        run: |
          VERSION="v4.3" # Updated to v4.3
          VERSION_CODE="46" # Updated to 46
          echo "MODULE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "MODULE_VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

      - name: Create Magisk module structure
        run: |
          # Create module directory
          mkdir -p magisk_module
          
          # Create module.prop file
          cat << EOF > magisk_module/module.prop
          id=vtec_unlock
          name=VTEC Unlock Module
          version=${MODULE_VERSION}
          versionCode=${MODULE_VERSION_CODE} # Using updated version code
          author=YourName
          description=A sample Magisk module for VTEC unlock
          EOF
          
          # Create META-INF directory and update-binary
          mkdir -p magisk_module/META-INF/com/google/android
          
          # Create update-binary (required for Magisk)
          cat << 'EOF' > magisk_module/META-INF/com/google/android/update-binary
          #!/sbin/sh
          # This is a dummy update-binary for Magisk modules
          
          OUTFD=$2
          ZIPFILE=$3
          
          ui_print() {
            echo "ui_print $1" > /proc/self/fd/$OUTFD
            echo "ui_print" > /proc/self/fd/$OUTFD
          }
          
          ui_print "********************************"
          ui_print "  VTEC Unlock Module Installer  "
          ui_print "********************************"
          ui_print ""
          ui_print "- Extracting module files"
          
          # Extract the module
          unzip -o "$ZIPFILE" -d $TMPDIR >&2
          
          # Copy files to Magisk module directory
          cp -R $TMPDIR/magisk_module/* $MODPATH/
          
          # Set permissions
          set_perm_recursive $MODPATH 0 0 0755 0644
          
          ui_print "- Installation complete"
          ui_print ""
          EOF
          
          # Create updater-script (legacy support)
          cat << 'EOF' > magisk_module/META-INF/com/google/android/updater-script
          #MAGISK
          EOF
          
          # Create service.sh (optional - runs on boot)
          cat << 'EOF' > magisk_module/service.sh
          #!/system/bin/sh
          # This script will be executed in late_start service mode
          
          # Add your service commands here
          # Example: echo "VTEC Unlock module loaded" > /data/local/tmp/vtec_log.txt
          EOF
          
          # Create customize.sh (optional - runs during installation)
          cat << 'EOF' > magisk_module/customize.sh
          #!/system/bin/sh
          # This script will be executed during installation
          
          # Print installation message
          ui_print "- Installing VTEC Unlock module..."
          ui_print "- Setting up module files..."
          
          # Add your custom installation logic here
          EOF
          
          # Create system directory for modifications (example)
          mkdir -p magisk_module/system/bin
          
          # Create a sample file
          cat << 'EOF' > magisk_module/system/bin/vtec_unlock
          #!/system/bin/sh
          # Sample VTEC unlock script
          echo "VTEC unlock script executed"
          EOF
          
          # Set executable permissions for scripts
          chmod +x magisk_module/service.sh
          chmod +x magisk_module/customize.sh
          chmod +x magisk_module/META-INF/com/google/android/update-binary
          chmod +x magisk_module/system/bin/vtec_unlock

      - name: Create Magisk module zip
        run: |
          cd magisk_module
          # Updated zip filename
          zip -r "../VTEC_Unlimit-${MODULE_VERSION}.zip" .
          cd ..

      - name: Update update.json
        run: |
          cat << EOF > update.json
          {
            "version": "${MODULE_VERSION}",
            "versionCode": "${MODULE_VERSION_CODE}", # Using updated version code
            "zipUrl": "https://github.com/${{ github.repository }}/releases/download/${MODULE_VERSION}/VTEC_Unlimit-${MODULE_VERSION}.zip", # Updated zip filename in URL
            "changelog": "https://raw.githubusercontent.com/${{ github.repository }}/main/changelog.md"
          }
          EOF

      - name: Commit updated update.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add update.json
          git diff-index --quiet HEAD || (
            git commit -m "Update update.json [skip ci]"
            git push
          )
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.MODULE_VERSION }}
          name: Release ${{ env.MODULE_VERSION }}
          body: |
            ## VTEC Unlock Module ${{ env.MODULE_VERSION }}
            
            **Installation:**
            1. Download the zip file
            2. Open Magisk Manager
            3. Go to Modules tab
            4. Tap "Install from storage"
            5. Select the downloaded zip file
            6. Reboot your device
            
            **Features:**
            - Sample VTEC unlock functionality
            - Systemless modification
            - Boot service support
            
            **Changelog:**
            - Auto-generated release from GitHub Actions
            - Updated module structure
            - Added proper Magisk module files
          files: VTEC_Unlimit-${{ env.MODULE_VERSION }}.zip # Updated zip filename for release upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Complete job
        run: echo "Build and Release job completed successfully."
